<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="CheckBox4.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        R0lGODlhIAAgAPcAAAAAAPv8//r7/vf5/qy93sLL3ejv/e7z/fL2/vz9/9zn+9/p++Ps/PD1/u/0/fP3
        /mad82uf8XGi8Hmm7ZWz5KW73qm+4c3e+dHg+dPi+tDe9dXj+tfk+tjl+tzo+9/q/OTu/+Hr/ODq++Tt
        /Ofv/Onw/Ovy/erx/O3z/fD1/YGr6oeu6I6y5Y6r1ZOv2Ju44qC636rC5K7E5LnO7Mnc+cPU7s/g+tnm
        +trn+t/q++Ls++Xu/OTt+/P3/fn7/mqKtoem0Yqp04yq1I+t1pKv15Sx2ZOw2JWy2Zay2Zez2pm125y3
        3Zy43Zu23J653p+63qK84KS+4aO836fA46a/4qvE5a7G563F5qzE5bHJ6LXK573S7palurPE3Jinu56t
        wau5zKq4y6m3yq+90PH2/ff6/nSGnLPL6ZyrvqGww6a1yLG/0a+9z627zfX5/qOzxTBIYDJKYjdOZj1U
        a0pgd19ziPP4/fr8/v3+//v9/Onx6tvq3ANoA9rp2tno2djn2N/s397r3uHt4eTv5Obw5uny6ejx6O31
        7evz6+/27/H38fT59PP48/b69vX59fb59vj6+P7//v3+/fz9/B13HEyWSjSHMWOZYFmkVGisY1mCVt3q
        3EaTP0iHQW6wZ+Pu4i9RK2SqW12aVnS2bHu7coXBe5zHlLLWqqfQnXWyYoq1e5C8gZW3inagZXuma4Cq
        cIWvdU6MNF6TSGqWV2aOVHGbXo2qgSlMGTdcJVaMPEtyOTBSHUZsMmGHTEFlK1Z6QFyARvr7+f////7+
        /gAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        ACH5BAEAAAAALAAAAAAgACAAAAj/AAEIHEiwoMGDCAWuWbhmDJuHbdqAARNGjBg1GBMWXCOso8ePeITh
        wZMggRozCFepgvXKVatas2j16gXs1y9dukaOLPkGRJ2Dqk6dQoXKlFFWKlm2zLkzQYCeHuYYDNoxkqQ8
        wSA1WqQo0aFWumbM2BkgDQgPGuQUhHVqmKSrWR9x9YoIrE6SAb6c1VADDsFXqIZ5ypRJ1CNGmhJrKlSL
        V1OnX7bM0CLDgl+BrlBNqnSKFClZmjxhssSHUOMzWbJYuVIFTZ3XdOjMudzKFFZOqEaF6jS69KBZvkZa
        cXrHR4EuFZJLuVzLVLBGjiyZCoWJV+lPgoCPrOLUR5kobh6Q/3EA4/IsVtAZjV4lqxKuS5cAycKFJUaM
        KVSiQIHxAEGKA+UJRMsqXGGSCiaUlNIeLrZsMh9JVAQgQBllONEDAg6g8MJlvaiiHigggkLJKAvuMV9J
        UQjgnRtLINDAASZsKBAwsNBViCGD2BIiKH3ksksU+sHgBBNNKEHGASicQMFlv7xyCCJ6EDLIJ4AEssce
        ffzho4RPlDGAGz0kkeEJJSwp0C+uIGKIlFQGsskefvzxRyy3+OADE1/2QEYRKJhgwA4sXKaLSy/BNIss
        iOaSSyx0OrFEkUkcUYQLJpRgwAiBCoSTLrx06sunuIS6y6i3fJmEeCn0WQIJIzCwwmUFff9BIRUDDOAl
        nuH1l4IDRAzxAwk7MJCDCrAS9IUbbgQ5ZJEPIFHED0gO4cYPI+ggggfEHvSFHT3w90APPRiZQhHTJtnC
        tCFcq8AExQ6EBgJkOEEGGQ2kgIQDBxAxbQtCBDHtBx7g0AG7B6HhgAOPKhFpEUSYIO0PO/Dg7w8Bd7CB
        BO0KhAYKKChhwscnEFFCCef+wEAIQEx7AwcbZIDxQV6QmcTIlg6xww5C/LtAyj+wnIENEWQMgBckkFCE
        Eb22wO8PTDftNAY2AC20FyPwUPXJ1uawgAcBr8xBBhlAfQENEAjNRQhoh6D11h4ocIPXLYs9Ntlmf3Ac
        ATBQwMLee68gsIIKKkwwgQQSRADB4WbXIZscccDh+OOQRw65RpRXHhAAOw==
</value>
  </data>
</root>